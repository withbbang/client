.wrap {
  display: flex;
  width: 100%;
  min-height: calc(100% - 100px);
  user-select: none;
  @include background($more-light);

  &.night {
    @include background($dark);

    .innerWrap {
      .count {
        @include font($light);

        > div {
          > button {
            @include font-background-boxShadow($light, $more-dark, 'none');
          }

          > button:disabled {
            opacity: 0.3;
          }

          > button:hover {
            box-shadow: 2px 2px 2px 1px rgba(255, 255, 255, 0.2);
          }
        }
      }

      .contents {
        &.noContents {
          @include font($light);
        }
      }
    }
  }

  .innerWrap {
    padding: 10% 10%;
    width: 80%;
    display: flex;
    flex-direction: column;

    .count {
      display: flex;
      flex: 0;
      margin: 10px;
      @include font($most-dark);

      > span {
        margin-right: auto;
      }

      > div {
        > button {
          margin-left: 10px;
          padding: 5px 10px;
          border: solid 1px rgb(125, 125, 125);
          border-radius: 10px;
          box-sizing: border-box;
          cursor: pointer;
          @include background-boxShadow($most-light, 'none');
        }

        > button:disabled {
          opacity: 0.7;
        }

        > button:hover {
          @include boxShadow(2px 2px 2px 1px rgba(0, 0, 0, 0.2));
        }
      }
    }

    .contents {
      display: flex;
      width: 100%;

      // flex-flow: row wrap; /* 하위 두개의 모든 기능 제공 */
      flex-direction: row; /* 아이템 나열 방향 -> 수평 */
      flex-wrap: wrap; /* 아이템 width가 넘어갔을 경우 다음 라인으로 넘길지 말지 -> wrap: 넘김, nowrap: 안 넘김 */

      &.noContents {
        height: 100%;
        justify-content: center;
        align-items: center;
        font-size: 2rem;
        @include font($most-dark);
      }
    }

    &.nothing {
      align-items: center;
      justify-content: space-around;
      font-weight: bold;
      font-size: 2rem;
      justify-content: center;
      @include font($most-dark);
    }
  }

  .createBox {
    display: flex;
    position: fixed;
    top: 60%;
    right: 0;
    width: 300px;
    height: 300px;
    border-top-left-radius: 10px;
    border-bottom-left-radius: 10px;
    box-sizing: border-box;
    z-index: 50;
    @include background-transform($less-light, translateX(0));

    .toggle {
      display: flex;
      align-items: center;
      width: 30px;
      height: 50px;
      position: absolute;
      list-style: none;
      left: -29px;
      z-index: 50;
      box-sizing: border-box;
      top: calc(100% - 175px);
      border-top-left-radius: 10px;
      border-bottom-left-radius: 10px;
      cursor: pointer;
      @include background($less-light);

      svg {
        transition: transform linear 0.5s;
      }
    }

    .innerBox {
      width: 300px;
      height: calc(100% - 60px);
      display: flex;
      flex-direction: column;
      padding: 30px;
      justify-content: space-between;

      :nth-child(n) {
        width: 250px;
        height: 40px;
        border: solid 1px rgb(125, 125, 125);
        border-radius: 10px;
        box-sizing: border-box;
        @include font-background-boxShadow($most-dark, $most-light, 'none');
      }

      > input,
      select {
        padding: 0 10px;
      }

      > input:focus,
      select:focus,
      button:hover {
        @include boxShadow(4px 4px 2px 1px rgba(0, 0, 0, 0.2));
      }

      > input::placeholder {
        color: #aaa;
      }

      > select,
      button {
        cursor: pointer;
      }
    }

    &.night {
      @include background-transform($more-dark, translateX(0));

      .toggle {
        @include background($more-dark);
      }

      .innerBox {
        :nth-child(n) {
          @include font-background($light, $more-dark);
        }

        > input:focus,
        select:focus,
        button:hover {
          border: solid 1px rgb(125, 125, 125);
          @include boxShadow(4px 4px 2px 1px rgba(255, 255, 255, 0.2));
        }
      }
    }

    &.off {
      right: 0px;
      box-sizing: border-box;
      z-index: 50;
      @include transform(translateX(300px));

      .toggle {
        svg {
          @include transform(rotate(180deg));
        }
      }
    }
  }
}
